<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.4.1</version>
    </parent>

    <groupId>com.bitprogress</groupId>
    <artifactId>bit-progress</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>gateway</module>
        <module>common</module>
        <module>dao</module>
        <module>remote</module>
        <module>login</module>
        <module>manager</module>
        <module>server</module>
    </modules>

    <properties>
        <!-- Jdk Version -->
        <java.version>1.8</java.version>
        <!-- 编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <!-- Spring Cloud Version -->
        <spring.cloud.version>2020.0.0</spring.cloud.version>
        <!-- Spring Cloud Alibaba Version -->
        <spring.cloud.alibaba.version>2.2.1.RELEASE</spring.cloud.alibaba.version>
        <!-- Spring Cloud Alibaba Dubbo Version -->
        <spring.cloud.alibaba.dubbo.version>2021.1</spring.cloud.alibaba.dubbo.version>
        <!-- Spring Cloud Eureka Version -->
        <spring.cloud.eureka.version>1.4.7.RELEASE</spring.cloud.eureka.version>
        <!-- Spring Cloud Hystrix Version -->
        <spring.cloud.hystrix.version>2.2.9.RELEASE</spring.cloud.hystrix.version>
        <!-- MyBatis-Plus Version -->
        <mybatisplus.version>3.1.1</mybatisplus.version>
        <!-- Mysql Connector Version -->
        <mysql.java.connector.version>8.0.20</mysql.java.connector.version>
        <!-- Lombok Version -->
        <lombok.version>1.16.22</lombok.version>
        <!-- Fastjson Version -->
        <fastjson.version>1.2.53</fastjson.version>
        <!-- Javax Servlet Version -->
        <javax.servlet.version>3.1.0</javax.servlet.version>
        <javax.ws.rs.version>2.1.1</javax.ws.rs.version>
        <!-- Swagger -->
        <swagger.version>3.0.0</swagger.version>
        <!-- Swagger-models -->
        <swagger.models.version>1.5.21</swagger.models.version>
        <!-- knife4j -->
        <knife4j.version>3.0.3</knife4j.version>
        <!-- Okhttp -->
        <okhttp.version>3.14.1</okhttp.version>
        <feign.okhttp.version>11.5</feign.okhttp.version>
        <!-- quartz -->
        <quartz.version>2.3.2</quartz.version>
        <!--AliSms-->
        <ali.sms.version>4.1.0</ali.sms.version>
        <!-- MapStruct -->
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
    </properties>

    <packaging>pom</packaging>

    <dependencies>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>${spring.cloud.eureka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring.cloud.hystrix.version}</version>
            </dependency>

            <!-- MyBatis Plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>

            <!-- Mysql Connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.java.connector.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- javax.ws.rs dubbo -->
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs.version}</version>
            </dependency>

            <!-- Swagger -->
            <!-- swagger-annotations-1.5.20和swagger-models-1.5.20有bug -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-models</artifactId>
                    </exclusion>
                </exclusions>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.models.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.models.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- Knife4j -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- OkHttp -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <!-- Quartz -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!-- AliSms -->
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${ali.sms.version}</version>
            </dependency>

            <!-- MapStruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>